package com.lab2;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.atomic.AtomicReference;

public class myForm {
    private JPanel myForm;
    private JTextField textInput;
    private JButton resultButton;
    private List<Integer> data = new ArrayList<>();

    private myForm() {
        resultButton.addActionListener(e -> JOptionPane.showMessageDialog(null, String.valueOf(calculate(data))));
        textInput.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                String readText = textInput.getText();
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    if (readText.equals("0")) {
                        JOptionPane.showMessageDialog(null, String.valueOf(calculate(data)));
                        textInput.setText("");
                    } else {
                        data.add(Integer.parseInt(readText));
                        textInput.setText("");
                    }
                }
            }
        });
    }

    private AtomicReference<StringBuilder> calculate(List<Integer> data) {
        AtomicReference<StringBuilder> result = new AtomicReference<>(new StringBuilder());
        for (int number :
                data) {
            result.get().append("(").append(number).append(" ; ");
            result.get().append(Main.calculate(number));
            result.get().append("),\n");

        }
        return result;
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("myForm");
        frame.setContentPane(new myForm().myForm);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        myForm = new JPanel();
        myForm.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        myForm.setMinimumSize(new Dimension(200, 100));
        myForm.setBorder(BorderFactory.createTitledBorder("calculate"));
        resultButton = new JButton();
        resultButton.setText("result");
        myForm.add(resultButton, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textInput = new JTextField();
        myForm.add(textInput, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return myForm;
    }

}
